@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="nav nav-secondary">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <a asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">
                <i class="fas fa-user-circle"></i>
                <span class="sub-item">Hello @User.Identity?.Name!</span>
            </a>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout"
                  asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn text-start text-light w-100" style="background: none; border: none;">
                    <i class="fas fa-sign-out-alt"></i>
                    <span class="sub-item">Logout</span>
                </button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a asp-area="Identity" asp-page="/Account/Register">
                <i class="fas fa-user-plus"></i>
                <span class="sub-item">Register</span>
            </a>
        </li>
        <li class="nav-item">
            <a asp-area="Identity" asp-page="/Account/Login">
                <i class="fas fa-sign-in-alt"></i>
                <span class="sub-item">Login</span>
            </a>
        </li>
    }
</ul>
