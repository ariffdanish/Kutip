@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    string firstName = null;
    if (SignInManager.IsSignedIn(User))
    {
        var user = await UserManager.GetUserAsync(User);
        firstName = user?.FirstName ?? User.Identity?.Name;
    }
}

    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <a asp-area="Identity" asp-page="/Account/Manage/Index" class="nav-link" title="Manage">
                <i class="fas fa-user-circle"></i>
                <span class="sub-item">Hello @firstName!</span>
            </a>
        </li>

        <li class="nav-item">
    <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout"
          asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
        <button type="submit" class="nav-link btn text-start text-white w-100" style="background-color: black; border: none;">
            <i class="fas fa-sign-out-alt"></i>
            <span class="sub-item">Logout</span>
        </button>
    </form>
</li>


    }
    else
    {
        <li class="nav-item">
            <a class="nav-item" asp-area="Identity" asp-page="/Account/Register" class="nav-link">
                <i class="fas fa-user-plus"></i>
                <span class="sub-item">Register</span>
            </a>
        </li>
        <li class="nav-item">
            <a asp-area="Identity" asp-page="/Account/Login" class="nav-link">
                <i class="fas fa-sign-in-alt"></i>
                <span class="sub-item">Login</span>
            </a>
        </li>
    }

