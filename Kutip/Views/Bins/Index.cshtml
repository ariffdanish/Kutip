@model IEnumerable<Kutip.Models.Bin>

@{
    ViewData["Title"] = "Bin List";
    bool isTruckDriver = User.IsInRole("TruckDriver");
}

<div class="container">

    <nav aria-label="breadcrumb" class="my-3">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="@Url.Action("Index", "Dashboard")"><i class="fas fa-home"></i> Home</a></li>
            <li class="breadcrumb-item active" aria-current="page"><i class="fas fa-trash"></i> Bin List</li>
        </ol>
    </nav>

    <div class="page-inner">
        <div class="row">
            <div class="col-md-12">
                <div class="card shadow">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h4 class="card-title mb-0">Bin List</h4>
                        @if (!isTruckDriver)
                        {
                            <a asp-action="Create" class="btn btn-sm btn-primary">
                                <i class="fas fa-plus"></i> Create Bin
                            </a>

                            <button class="btn btn-sm btn-success" data-bs-toggle="modal" data-bs-target="#scanModal">
                                <i class="fas fa-camera"></i> Scan Bin
                            </button>

                        }
                    </div>

                    <div class="card-body">
                        <div class="table-responsive">
                            <table id="basic-datatables" class="display table table-striped table-hover" style="width:100%">
                                <thead>
                                    <tr class="text-center">
                                        <th>@Html.DisplayNameFor(model => model.BinNo)</th>
                                        <th>@Html.DisplayNameFor(model => model.Street)</th>
                                        <th>@Html.DisplayNameFor(model => model.City)</th>
                                        <th>Status</th>
                                        <th>Schedule Status</th>  <!-- New Column -->
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model)
                                    {
                                        <tr class="text-center">
                                            <td>@Html.DisplayFor(modelItem => item.BinNo)</td>
                                            <td>@Html.DisplayFor(modelItem => item.Street)</td>
                                            <td>@Html.DisplayFor(modelItem => item.City)</td>
                                            <td>
                                                @{
                                                    var status = item.Status.ToString();
                                                    string badgeClass = status switch
                                                    {
                                                        "Active" => "badge bg-success",
                                                        "Inactive" => "badge bg-danger",
                                                        _ => "badge bg-secondary"
                                                    };
                                                }
                                                <span class="@badgeClass">@status</span>
                                            </td>
                                            <td>
                                                @{
                                                    var latestSchedule = item.Schedules?
                                                        .OrderByDescending(s => s.ScheduledDay)
                                                        .FirstOrDefault();

                                                    string scheduleStatus = latestSchedule != null ? latestSchedule.Status.ToString() : "No Schedule";

                                                    string scheduleBadgeClass = scheduleStatus switch
                                                    {
                                                        "Scheduled" => "badge bg-primary",
                                                        "Completed" => "badge bg-success",
                                                        "Missed" => "badge bg-danger",
                                                        "Reassigned" => "badge bg-warning",
                                                        _ => "badge bg-secondary"
                                                    };
                                                }
                                                <span class="@scheduleBadgeClass">@scheduleStatus</span>
                                            </td>
                                            <td>
                                                @if (isTruckDriver)
                                                {
                                                    if (latestSchedule != null)
                                                    {
                                                        <form method="post" asp-controller="Schedules" asp-action="MarkDone" class="d-inline" onsubmit="return confirm('Mark schedule @latestSchedule.ScheduleId as DONE?');">
                                                            @Html.AntiForgeryToken()
                                                            <input type="hidden" name="scheduleId" value="@latestSchedule.ScheduleId" />
                                                            <input type="hidden" name="returnUrl" value="@Context.Request.Path + @Context.Request.QueryString" />
                                                            <button type="submit" class="btn btn-success btn-sm" title="Mark as Done">
                                                                <i class="fas fa-check"></i> DONE
                                                            </button>
                                                        </form>


                                                        <form method="post" asp-controller="Schedules" asp-action="ReportIssue" class="d-inline ms-1" onsubmit="return confirm('Report ISSUE for schedule @latestSchedule.ScheduleId?');">
                                                            @Html.AntiForgeryToken()
                                                            <input type="hidden" name="scheduleId" value="@latestSchedule.ScheduleId" />
                                                            <input type="hidden" name="returnUrl" value="@Context.Request.Path + @Context.Request.QueryString" />
                                                            <button type="submit" class="btn btn-danger btn-sm" title="Report Issue">
                                                                <i class="fas fa-exclamation-triangle"></i> ISSUE
                                                            </button>
                                                        </form>
                                                    }
                                                    else
                                                    {
                                                        <span class="text-muted">No schedule</span>
                                                    }
                                                }
                                                else
                                                {
                                                    <!-- For Admin and others, show original Edit, Details, Delete -->
                                                    <a asp-action="Edit" asp-route-id="@item.BinId" class="btn btn-warning btn-sm" title="Edit">
                                                        <i class="fa fa-edit"></i>
                                                    </a>
                                                    <a asp-action="Details" asp-route-id="@item.BinId" class="btn btn-info btn-sm" title="View Details">
                                                        <i class="fa fa-eye"></i>
                                                    </a>
                                                    <a asp-action="Delete" asp-route-id="@item.BinId" class="btn btn-danger btn-sm" title="Delete">
                                                        <i class="fa fa-trash"></i>
                                                    </a>
                                                }
                                            </td>
                                        </tr>
                                    }
                                </tbody>

                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Scan Modal -->
<div class="modal fade" id="scanModal" tabindex="-1" aria-labelledby="scanModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content shadow">
            <div class="modal-header">
                <h5 class="modal-title" id="scanModalLabel"><i class="fas fa-camera"></i> Scan Bin Plate</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>

            <div class="modal-body text-center">
                <video id="video" class="w-100 rounded border" autoplay></video>
                <canvas id="canvas" style="display:none;"></canvas>

                <button id="scanBtn" class="btn btn-primary mt-3">
                    <i class="fas fa-search"></i> Capture & Scan
                </button>

                <div id="scanResult" class="mt-3"></div>
            </div>
        </div>
    </div>
</div>



@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
    <script>

        $(document).ready(function () {
            $('#basic-datatables').DataTable({
                responsive: true,
                fixedHeader: true
            });
        });


                // Scan Modal Webcam & OCR
        let stream;
        const video = document.getElementById("video");
        const canvas = document.getElementById("canvas");
        const scanBtn = document.getElementById("scanBtn");
        const resultDiv = document.getElementById("scanResult");

        // Start webcam when modal opens
        $('#scanModal').on('shown.bs.modal', async function () {
            try {
                stream = await navigator.mediaDevices.getUserMedia({ video: true });
                video.srcObject = stream;
            } catch (err) {
                resultDiv.innerHTML = `<div class="alert alert-danger">Camera access denied.</div>`;
            }
        });

        // Stop webcam when modal closes
        $('#scanModal').on('hidden.bs.modal', function () {
            if (stream) {
                stream.getTracks().forEach(track => track.stop());
            }
            video.srcObject = null;
            resultDiv.innerHTML = '';
        });

        scanBtn.addEventListener("click", async () => {
            const ctx = canvas.getContext("2d");
            canvas.width = video.videoWidth;
            canvas.height = video.videoHeight;
            ctx.drawImage(video, 0, 0, canvas.width, canvas.height);
            const imageData = canvas.toDataURL("image/png");

            scanBtn.disabled = true;
            scanBtn.innerHTML = `<span class="spinner-border spinner-border-sm"></span> Scanning...`;

            try {
                const response = await fetch('/Bins/ScanPlate', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ imageBase64: imageData })
                });

                const data = await response.json();

                if (data.success) {
                    resultDiv.innerHTML = `<div class="alert alert-success">✅ Detected <strong>${data.detectedPlate}</strong><br>${data.message}</div>`;
                } else {
                    resultDiv.innerHTML = `<div class="alert alert-warning">⚠️ Detected: <strong>${data.detectedPlate || 'N/A'}</strong><br>${data.message}</div>`;
                }
            } catch (err) {
                resultDiv.innerHTML = `<div class="alert alert-danger">❌ Error during scanning.</div>`;
            }

            scanBtn.disabled = false;
            scanBtn.innerHTML = `<i class="fas fa-search"></i> Capture & Scan`;
        });


    </script>
}
